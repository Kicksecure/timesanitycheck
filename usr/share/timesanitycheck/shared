#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2018 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

time_sanity_check() {
   ## Expiration date in unixtime.
   ## date --date '17 MAY 2033 10:00:00' '+%s'
   ## 1999936800
   EXPIRATION_UNIXTIME="1999936800"
   ## Convert seconds since the epoch (1970-01-01 UTC) (unixtime) to a date
   ## date --date="@1999936800"

   local build_timestamp_file
   if [ -f "/usr/share/whonix/build_timestamp" ]; then
      ## Originally, this was a Whonix specific script.
      ## Prefer the eventually existing older version.
      build_timestamp_file="/usr/share/whonix/build_timestamp"
   elif [ -f /var/lib/anon-dist/build_version ]; then
      build_timestamp_file="/var/lib/anon-dist/build_version"
   else
      ## TODO: What file exists on any system and has a high probability
      ##       of never getting touched?
      build_timestamp_file="/usr/share/zoneinfo/UTC"
   fi

   ## build timestamp
   BUILD_UNIXTIME="$(date -r "$build_timestamp_file" +%s)"
   BUILD_TIME="$(date -r "$build_timestamp_file")"

   ## time after boot
   BOOT_UNIXTIME="$(date +%s)"
   BOOT_TIME="$(date)"

   ## expiration date
   ## EXPIRATION_UNIXTIME variable gets sourced from /etc/default/$NAME
   EXPIRATION_TIME="$(date --date="@$EXPIRATION_UNIXTIME")"

   ## time_sanity_check_msg_dynamic is used by /usr/share/timesanitycheck/start.
   ## time_sanity_check_msg_static is used by /usr/lib/anon-shared-helper-scripts/te_pe_tb_check.

   if [ "$BOOT_UNIXTIME" -lt "$BUILD_UNIXTIME" ]; then
      time_sanity_check_msg_dynamic="The clock is slow.
       (Current time $BOOT_TIME ($BOOT_UNIXTIME) is less than
 the build timestamp $BUILD_TIME ($BOOT_UNIXTIME).)"
       time_sanity_check_msg_static="The clock is slow.
(Current time is less than the build timestamp $BUILD_TIME.)"
      time_sanity_check_exit_code=2
      return
   fi

   if [ "$BOOT_UNIXTIME" -gt "$EXPIRATION_UNIXTIME" ]; then
      time_sanity_check_msg_dynamic="The clock is fast.
       (Current time $BOOT_TIME ($BOOT_UNIXTIME) is greater than
 the build timestamp $EXPIRATION_TIME ($EXPIRATION_UNIXTIME).)"
      time_sanity_check_msg_static="The clock is fast.
Current time is greater than the expiration timestamp $EXPIRATION_TIME."
      time_sanity_check_exit_code=3
      return
   fi

   time_sanity_check_msg_dynamic="The clock is sane.
Current time $BOOT_TIME ($BOOT_UNIXTIME)."
   time_sanity_check_msg_static="The clock is sane.
Within build timestamp $BUILD_TIME and expiration timestamp $EXPIRATION_TIME."
   time_sanity_check_exit_code=0
}
